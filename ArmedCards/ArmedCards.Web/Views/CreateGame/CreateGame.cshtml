@*
 * Copyright (c) 2013, Kevin McRell & Paul Miller
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted
 * provided that the following conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright notice, this list of conditions
 *   and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice, this list of
 *   conditions and the following disclaimer in the documentation and/or other materials provided
 *   with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*@

@model ArmedCards.Web.Models.Game.CreateGame
@{
    ViewBag.Title = "CreateGame";
    Layout = "~/Views/Shared/Layout/_Footer.cshtml";

    ArmedCards.Web.Models.Shared.Header header = new ArmedCards.Web.Models.Shared.Header();
    header.SubHeaderText = "Create a game.";
}

@Html.Partial("~/Views/Shared/Partials/_Header.cshtml", header)

@using (Html.BeginForm("Index", "CreateGame", FormMethod.Post, new { id = "createGameForm" }))
{
    @Html.AntiForgeryToken()
    <div class="createGame">
        @Html.ValidationSummary(true)
        <label for="gameTitle" class="accessible">Short Answer</label>
        <div class="fakeInput gameTitle">
            @Html.TextBoxFor(m => m.Game.Title, new { @class = "title", placeholder = "Game title goes here." })
        </div>
        @Html.ValidationMessageFor(m => m.Game.Title)
        <div class="setPlayers">
            <div>
                <div class="fakeSelect">
                    <select id="Game_MaxNumberOfPlayers" name="Game.MaxNumberOfPlayers">
                        @for (int i = 3; i < 9; i++)
                        {
                            <option @(Model.Game.MaxNumberOfPlayers == i ? "selected='selected'" : "") value="@i">@i</option>
                        }
                    </select>
                </div>
                <label for="Game_MaxNumberOfPlayers">players</label>
            </div>
            @Html.CheckboxFor(Model, x => x.Game.IsPrivate, "Private game.", "fakeCheckLabel privateGame")
            @Html.LabelFor(x => x.Game.Password, "Passphrase", new { @class = "accessible" })
            <div id="divPassphrase" class="fakeInput passcode" style="display: none;">
                @Html.TextBoxFor(x => x.Game.Password, new { @class = "title", placeholder = "Passphrase" })
            </div>

        </div>
        <div class="additionalOptions">
            <div class="setPlayers">
                <div>
                    <div class="fakeSelect">
                        <select id="Game_PointToWin" name="Game.PointToWin">
                            @for (int i = 8; i < 101; i++)
                            {
                                <option @(Model.Game.PointToWin == i ? "selected='selected'" : "") value="@i">@i</option>
                            }
                        </select>
                    </div>
                    <label for="Game_PointToWin">points needed to win game.</label>
                </div>
            </div>
        </div>
        <a id="createGameSubmit" class="button" style="cursor: pointer;">Create</a>
    </div>
}
@section Scripts
{
    @Scripts.Render("~/bundles/Game/CreateGame")
}